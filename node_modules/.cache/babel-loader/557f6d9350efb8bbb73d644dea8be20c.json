{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/cuongto/Desktop/movie-redux-ovning/src/components/SearchMovies.js\",\n    _s = $RefreshSig$();\n\n// importera useState-hooks för att spara värdet från inputfältet i ett state\nimport React, { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport addMovies from \"../actions/addMovies\";\n\nfunction SearchMovies() {\n  _s();\n\n  //spara värdet från inputfältet i ett state\n  const [query, setQuery] = useState(''); //Anropa useDispatch för att kunna sedan köra dispatch med vår action\n\n  const dispatch = useDispatch();\n\n  async function handleClick() {\n    const API_KEY = '37fe945a';\n    const API_URL = 'http://www.omdbapi.com/?apikey='; //parametern s är för att söka mot API:et, det som query innehåller är det som API:et söker efter \n\n    const response = await fetch(API_URL + API_KEY + `&s=${query}`);\n    const data = await response.json();\n    console.log(data); //Kalla på vår addMovies - action och skicka med filmerna från API-svaret.\n\n    dispatch(addMovies(data.Search));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: event => setQuery(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchMovies, \"H3zNfrpynTsDFAc3ddyCCvnFWZ0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SearchMovies;\nexport default SearchMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchMovies\");","map":{"version":3,"sources":["/Users/cuongto/Desktop/movie-redux-ovning/src/components/SearchMovies.js"],"names":["React","useState","useDispatch","addMovies","SearchMovies","query","setQuery","dispatch","handleClick","API_KEY","API_URL","response","fetch","data","json","console","log","Search","event","target","value"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC,CAFoB,CAGpB;;AACA,QAAMM,QAAQ,GAAGL,WAAW,EAA5B;;AAEC,iBAAeM,WAAf,GAA6B;AAC1B,UAAMC,OAAO,GAAG,UAAhB;AACA,UAAMC,OAAO,GAAG,iCAAhB,CAF0B,CAI1B;;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,OAAO,GAAGD,OAAV,GAAqB,MAAKJ,KAAM,EAAjC,CAA5B;AACA,UAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAR0B,CAS1B;;AACAN,IAAAA,QAAQ,CAACJ,SAAS,CAACU,IAAI,CAACI,MAAN,CAAV,CAAR;AACH;;AAID,sBACI;AAAA,4BAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAIC,KAAD,IAAWZ,QAAQ,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAGZ,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA7BQJ,Y;UAIYF,W;;;KAJZE,Y;AA8BT,eAAeA,YAAf","sourcesContent":["// importera useState-hooks för att spara värdet från inputfältet i ett state\nimport React, { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport addMovies from \"../actions/addMovies\";\n\nfunction SearchMovies() {\n    //spara värdet från inputfältet i ett state\n    const [query, setQuery] = useState('');\n    //Anropa useDispatch för att kunna sedan köra dispatch med vår action\n    const dispatch = useDispatch();\n    \n     async function handleClick() {\n        const API_KEY = '37fe945a';\n        const API_URL = 'http://www.omdbapi.com/?apikey=';\n\n        //parametern s är för att söka mot API:et, det som query innehåller är det som API:et söker efter \n        const response = await fetch(API_URL + API_KEY + `&s=${query}`);\n        const data = await response.json();\n        \n        console.log(data)\n        //Kalla på vår addMovies - action och skicka med filmerna från API-svaret.\n        dispatch(addMovies(data.Search));\n    }\n\n\n\n    return(\n        <main>\n            {/* När en användare skriver i inputfältet så körs onChange och sparar värdet i vårt state med  */}\n            <input type='text' onChange={ (event) => setQuery(event.target.value)}></input>\n            <button onClick={ handleClick }>Search</button>\n        </main>\n    )\n\n}\nexport default SearchMovies;"]},"metadata":{},"sourceType":"module"}